#pragma once
#define _CRT_SECURE_NO_WARNINGS// Эта директива необходима, чтобы можно было использовать функции C для работы со строками. Короче она отключает безопасность при работе с памятью;
/*
	Подключаем необходимые библиотеки;
*/
#include <Windows.h>// Для перевода кракозябр в русские символы
#include <iostream>// Стандартная библиотека ввода\вывода для C++;
#include <iomanip>// Библиотека для использования манипуляторов;
#include <fstream>// Библиотека C++ для работы с файловыми потоками (рекомендую перечитать лекции)

using namespace std;// Подключаем пространство имён std

/*
	Класс AEROFLOT(объявления);
*/
class AEROFLOT
{
/*
	Данные;
*/
// Закрытые;
private:
	char *destinationFlight;// Название пункта назначения рейса;
	int flightNumber;// Номер рейса;
	char *typeAircraft;// Тип самолёта;
/*
	Функциональность класса AEROFLOT;
*/
// Открытые;
public:
	/*
		Конструкторы;
	*/
	AEROFLOT();// Конструктор по-умолчанию;
	~AEROFLOT();// Деструктор по-умолчанию;
	AEROFLOT(const char*, int, const char*);// Конструктор для заполнения всех полей класса
	AEROFLOT(AEROFLOT&);// Конструктор копирования;

	/*
		Операции;
	*/
	AEROFLOT& operator = (AEROFLOT&);// Операция присваивания
	bool operator < (AEROFLOT&);// Операция сравнения "меньше" (название пункта назначения по алфавиту, в условии написано) 
	bool operator == (const char*);// Операция сравнения. Сравниваем тип самолёта с переданным типом

	/*
		Методы;
	*/
	void show();// Метод вывода на экран значений полей класса;
};